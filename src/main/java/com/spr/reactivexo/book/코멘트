 리포지토리 만들기
 업계에서는 NoSql 데이터 스토어를 표준화하는 방법을 찾기 위해 다양한 시도를 해왔지만
 아직까지 성공한 사례가 없다. 이유는 모든 NoSQL 엔진이 각기 다르며 저마다의 특징과 장단점이 있고,
  상충되는 부분이 존재하기 때문이다.
  NoSQL 엔진을 하나의 API로 통일해서 표준화하려면 매우 복잡한 과정을 거쳐야 하고, 그렇게 해도 개별 엔진의
  고유한 특성을 잃게 되므로 결국은 실패로 이어진다.

  그렇다면 스프링 데이터는 이 문제를 어떻게 해결하는 것일까?

  스프링이 가진 가장 강력한 패러다임 중의 하나는
  JdbcTemplate, RestTemplate, JmsTemplate 같은 템플릿[Template Pattern] 패턴이다.

  가장 간단한 사계로 JdbcTemplate을 사용하면 개발자가 데이터베이스 연결을 직접 열고 닫지 않아도 된다.

  * 전통적인 반복문을 활용하지 않는 이유. 부수효과
  명령형 프로그래밍에서는 모든 로컬 변수에 부수 효과가 발생할 수 있다. 상태를 만들면
  이 상태 값을 바꿀 수 있는 수많은 다른 API 를 거치면서 상태가 어떻게 변경되는지 파악하하기 어려워진다.
  따라서 여러 API 를 거치는 중간 어딘가에서 값이 잘못될 위험성도 함께 높아진다. 자바가 강력한 타입 시스템을 가지고 있다고는 하지만,
  의도하지 않은 변경에 의해 발생하는 문제를 막을 수 있을 정도로 강력하지는 않다.

  스트림 API 를 사용하면 이런 단점을 극복할 수 있다.

  예)
  if(cart.getCartItems().stream()
  .anyMatch(cartItem -> cartItem.getItem().getId().equals("5"))){
     //수량증가
  }else{
     // 새 구매 상품 항목 추가.
  }